import type { NextPage } from 'next';
import dynamic from 'next/dynamic';
import Head from 'next/head';
import { useState } from 'react';
import { ProductNotification } from '../../components/ProductNotification';
import { getProductDetails } from '../../services/openFoodData';
import { Product } from '../../types/product';
const BarcodeScannerComponent = dynamic(() => import('react-qr-barcode-scanner'), { ssr: false });

interface State {
  scannedBarcode: string;
  product: Product | undefined;
  status: 'INITIAL' | 'SCANNING' | 'SUCCESSFULLY_SCANNING' | 'PRODUCT_FETCHED_SUCCESSFULLY' | 'PRODUCT_FETCHED_FAILED';
}

const AppHome: NextPage = () => {
  const [pageState, setPageState] = useState<State>({ scannedBarcode: '', product: undefined, status: 'INITIAL' });

  return (
    <div className="flex">
      <Head>
        <title>Inventoriale App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex flex-col">
        <h1 className="font-bold block">Scanna i tuoi documenti</h1>

        <section>
          <button
            onClick={() => {
              setPageState({ scannedBarcode: '', product: undefined, status: 'SCANNING' });
            }}
            className="px-4 py-1 text-sm text-purple-600 font-semibold rounded-full border border-purple-200 hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2"
          >
            Scanna
          </button>
          <button
            onClick={() => setPageState({ scannedBarcode: '', product: undefined, status: 'INITIAL' })}
            className="px-4 py-1 text-sm text-purple-600 font-semibold rounded-full border border-purple-200 hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2"
          >
            Reset
          </button>
          {pageState.status === 'SCANNING' && (
            <BarcodeScannerComponent
              onUpdate={async (err, result) => {
                if (result) {
                  const scannedBarcode = result.getText();
                  setPageState({ scannedBarcode, product: undefined, status: 'SUCCESSFULLY_SCANNING' });
                  const response = await getProductDetails(scannedBarcode);
                  if (response !== null) {
                    console.log(response);
                    setPageState({
                      scannedBarcode,
                      product: {
                        name: response.data.product.product_name,
                        imageSrc: response.data.product.image_front_url,
                      },
                      status: 'PRODUCT_FETCHED_SUCCESSFULLY',
                    });
                  } else {
                    setPageState({
                      scannedBarcode,
                      product: undefined,
                      status: 'PRODUCT_FETCHED_FAILED',
                    });
                  }
                } else {
                  setPageState({ scannedBarcode: 'Keep scanning', product: undefined, status: 'SCANNING' });
                }
              }}
            />
          )}

          <p>Barcode: {pageState.scannedBarcode}</p>
          {pageState.product && <ProductNotification product={pageState.product} />}
        </section>
      </main>
    </div>
  );
};

export default AppHome;
